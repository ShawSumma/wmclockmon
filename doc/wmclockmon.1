.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH WMCLOCKMON 1 "September 07, 2002"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
wmclockmon \- A dockapp to monitor hour, date and alarms


.SH SYNOPSIS
.B wmclockmon [options]


.SH DESCRIPTION
This manual page documents briefly the
.B wmclockmon
command.
.PP
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invode bold face and italics, 
.\" respectively.
\fBWMClockMon\fP is a program to display a digital clock. It is a dockapp that
is supported by X window managers such as Window Maker, AfterStep, BlackBox,
and Enlightenment.

It displays time and date, an AM/PM indicator if wanted and an alarm indicator.
It has an LCD look\-alike user interface. The back-light may be turned on/off by
clicking the mouse button 1 (left) over the application. When alarm raises, an
alarm\-mode will alert you by turning on and off back\-light for 1 minute and
running the configured command. This can be stopped (and restarted) by clicking
the mouse button 3 (right) over the application. Clicking on AM or PM will
toggle 12h/24h clock mode, and clicking on ALRM will toggle alarm mode (you
should have alarms for that). If an alarm time has been set to \fBoff\fP (see
config file section) it will not be set back on. Updating the config will allow
this.

By clicking on the background with the button 1 while holding down the control
key, you can switch to internet time display (in beats) and the same action
bring back to the local time. You can start directly with internet time (see
the \-it option).

Clicking with the mouse button 2 (middle) while holding down the control
key, launches the configuration tool. If you don't hold the control key
down, it cycles through the different styles.

Clicking with the mouse button 3 (right) while holding down the control
key, launches the calendar tool.

Command\-line options override the default configuration file options. But if
a file is given at command\-line (with the \-f option), its options will
override those given before.

Alarms can be added automatically with the included calendar (see below and
wmclockmon-cal(1) for more informations). Moreover the today's calendar can
be displayed at startup or at 00:00. In that order, the \fIMessageCmd\fP
option is used.

.rj 9
           +-------------------------+-------------------------+
           | no modifier             | control key             |
+----------+-------------------------+-------------------------+
| Button 1 | action/backlight on-off | internet time           |
+----------+-------------------------+-------------------------+
| Button 2 | cycle style             | configuration tool      |
+----------+-------------------------+-------------------------+
| Button 3 | blinking on/off         | calendar tool           |
+----------+-------------------------+-------------------------+


.SH OPTIONS
This program follows the usual GNU command line syntax, with long options
starting with two dashes (`\-'). A summary of options is included below.
.TP
.B \-d,  \-\-display <string>
Attempt to open a window on the named X display. In the absence of this option,
the  display specified by the
.B DISPLAY
environment variable is used.
.TP
.B \-h,  \-\-help
show help text and exit.
.TP
.B \-v,  \-\-version
show program version and exit.
.TP
.B \-bl, \-\-backlight
turn on back\-light.
.TP
.B \-lc, \-\-light\-color <color>
back-light or LEDs color (rgb:6E/C6/3B is default for LCD looks, rgb:00/B0/EA
is default for LED looks).
.TP
.B  \-it, \-\-internet\-time
start with internet time (in beats).
.TP
.B \-i,  \-\-interval <number>
number of secs between updates (1 is default).
.TP
.B \-w,  \-\-windowed
run the application in windowed mode.
.TP
.B \-bw, \-\-broken\-wm
activate broken window manager fix.
.TP
.B \-a,  \-\-alarm <HH:MM>
set alarm time to HH:MM (24h clock mode).
.TP
.B \-c,  \-\-alarm\-cmd <string>
command to launch when an alarm raises.
.TP
.B \-mc,  \-\-message\-cmd <string>
command to display messages when an alarm raises.
.TP
.B \-12, \-\-h12
12 hours clock mode (default is 24).
.TP
.B \-s,  \-\-style <name>
style to use for display. If \-sd is given, there is no need to give an
extention since it is automatically given (\fI.mwcs\fP). Using this option
to a \fI.mwcs\fP file automatically sets the styles directory if not already
given. A subsequent use of \-sd will overwrite it. Using another extention
may give erroneous results.
.TP
.B \-sd, \-\-style\-dir <directory>
set the directory where styles are stored.
.TP
.B \-nb, \-\-no\-blink
disable blinking when alarm raises.
.TP
.B \-f,  \-\-cfgfile
load configuration file.
.TP
.B \-nl,  \-\-no\-locale
don't use the current locale (use the C locale instead).
.TP
.B \-l,  \-\-label
use a label instead of the current date (usefull if you have multiple
instances running different timezones).
.TP
.B \-sc,  \-\-show\-cal
show today's calendar/TODO list at startup/00:00.
.TP
.B \-ca,  \-\-cal\-alrms
load calendar alarms for today.


.SH FILES
.B wmclockmon
uses one default file : ~/.wmclockmonrc. Empty lines or lines begining
with a # are ignored. Entries are summarized below (default value in
parenthesis). Booleans can be either 1/0, true/false, yes/no or
on/off, case insensitive. A sample file is given in the source package.
.TP
.B Backlight =
Boolean (off).
.TP
.B Color =
String (#6EC63B for LCD looks, #00B0EA for LED looks).
.TP
.B Alarm =
String (noting). You can have several \fBAlarm\fP entries. An entry is in the
form of [bool@]HH:MM[\-D][.M], with bool representing the alarm status (on or
off), HH:MM the hours and minutes of alarm, D the number of the day it should
happen and M is the message that should be displayed when this alarm raises.
The bool, the D and the M values are optionals (the boolean defaults to on, no
day value means 'every day' and the message is optional). @, \- and . are the
separators between the each of them and the time (or the day, for the message).
The alarm time HAVE to be in 24h mode and with 2 digits for hours and 2 for
minutes (no spaces). The day value, if given, should be between 1 and 7. Time
and day values are used with strftime (%H:%M and %u). For more examples, see
samples files in package...
.TP
.B Command =
String (nothing). Command that is executed once an alarm raises (eg: ogg123 -d
esd -q /home/thomas/documents/sons/alarme.ogg).
.TP
.B MessageCmd =
String (nothing). Command that is executed with the MESSAGE part of the alarm
that is raised as argument.
.TP
.B Blink =
Boolean (yes).
.TP
.B H12 =
Boolean (false). Set 12h/24h clock mode.
.TP
.B Locale =
Boolean (yes). Use your current locale or not (use C locale instead).
.TP
.B Style =
String (nothing).
.TP
.B StyleDir =
String (nothing). Directory where styles are stored.
.TP
.B TimeMode =
Integer (0: normal clock, 1: internet time, 2: binary clock).
.TP
.B ShowCal =
Boolean (No). Show today's calendar at startup/00:00.
.TP
.B CalAlrms =
Boolean (Off). Load calendar's alarms for today.

Calendar files can be unique (for a particular day), yearly or monthly. For a
day, all calendar files are used (if they exist).


.SH STYLES
Building a new style is quite easy. A style is composed of 4 description
files and several pixmaps files : a main style file, a parts style file, a
letters style file and a internet time style file. Each of them contains
several variables and their associated values. If only the main style file
have its extension fixed to \fI.mwcs\fP, the others can have whatever name
you want but using those given is usefull for understanding :)

.SS MAIN STYLE FILE (.mwcs)

.TP
.B PartsStyle =
file where parts style is described.
.TP
.B LettersStyle =
file where letters style is described.
.TP
.B ITimeStyle =
file where internet time style is described.
.TP
.B BacklightOn =
background pixmap for backlight on display (58x58).
.TP
.B BacklightOff =
background pixmap for backlight off display (58x58).
.TP
.B NbColors =
number of shadow colors.
.P
.B Hours_PosX =
.br
.B Hours_PosY =
.br
.RS
hours position in pixels in the background pixmaps.
.RE
.TP
.B Hours_Big =
hours displayed in big (boolean).
.P
.B Minutes_PosX =
.br
.B Minutes_PosY =
.br
.B Minutes_Big =
.br
.RS
same as for hours.
.RE
.P
.B Seconds_PosX =
.br
.B Seconds_PosY =
.br
.B Seconds_Big =
.br
.RS
same as for hours.
.RE
.TP
.B Seconds_Colon =
seconds are a blinking colon.
.P
.B AM_PosX =
.br
.B AM_PosY =
.br
.RS
same as for hours.
.RE
.P
.B PM_PosX =
.br
.B PM_PosY =
.br
.RS
same as for hours.
.RE
.P
.B ALRM_PosX =
.br
.B ALRM_PosY =
.br
.RS
same as for hours.
.RE
.P
.B Weekday_PosX =
.br
.B Weekday_PosY =
.br
.RS
same as for hours.
.RE
.P
.B Day_PosX =
.br
.B Day_PosY =
.br
.RS
same as for hours.
.RE
.P
.B Month_PosX =
.br
.B Month_PosY =
.br
.RS
same as for hours.
.RE

.SS PARTS STYLE FILE (.pwcs)

.TP
.B Parts =
pixmaps for parts of graphics (big and small digits, graphs, AM/PM/ALRM).
.TP
.B BDigitHeight =
big digits height in pixels.
.TP
.B BDigitWidth =
big digits width in pixels.
.P
.B SDigitHeight =
.br
.B SDigitWidth =
.br
.RS
same as for big digits but for small digits.
.RE

.SS LETTERS STYLE FILE (.lwcs)

.TP
.B Letters =
pixmap for letters.
.P
.B LetterHeight =
.br
.B LetterWidth =
.br
.RS
same as for big and small digits.
.RE

.SS INTERNET TIME STYLE FILE (.iwcs)

.TP
.B IBacklightOn =
background pixmap for backlight on internet time display.
.TP
.B IBacklightOff =
same as above for backlight off.
.P
.B Beats_PosX =
.br
.B Beats_PosY =
.br
.B Beats_Big =
.br
.RS
as usual, same as for hours.
.RE
.P
.B 10thOB_PosX =
.br
.B 10thOB_PosY =
.br
.B 10thOB_Big =
.RS
same as above for tenths of beat.
.RE
.TP
.B 10thOB_Display =
display or not tenths of beat (boolean).
.P
.B Graph_PosX =
.br
.B Graph_PosY =
.br
.B Graph_Display =
.br
.RS
same as for tenths of beat.
.RE

.SS BINARY CLOCK STYLE FILE (.bwcs)

.TP
.B BBacklightOn =
background pixmap for backlight on binary clock display.
.TP
.B BBacklightOff =
same as above for backlight off.
.P
.B Bin_HX =
.br
.B Bin_HY =
.RS
hours bits start position (most significant bits first).
.RE
.P
.B Bin_MX =
.br
.B Bin_MY =
.RS
minutes bits start position (most significant bits first).
.RE
.P
.B Bin_SX =
.br
.B Bin_SY =
.RS
seconds bits start position (most significant bits first).
.RE
.P
.B Bin_ZX =
.br
.B Bin_ZY =
.RS
size of time bits squares.
.RE
.P
.B Bin_WX =
.br
.B Bin_WY =
.RS
week day bits start position (most significant bits first).
.RE
.P
.B Bin_DX =
.br
.B Bin_DY =
.RS
month day bits start position (most significant bits first).
.RE
.P
.B Bin_OX =
.br
.B Bin_OY =
.RS
month bits start position (most significant bits first).
.RE
.P
.B Bin_IX =
.br
.B Bin_IY =
.RS
size of date bits squares.
.B Specifying -1 for Bin_IX disable date displaying and other date specs are not needed.
.RE
.P
.B Bin_D1X =
.br
.B Bin_D1Y =
.RS
space between 2 bits of the same number for the time.
.RE
.P
.B Bin_D2X =
.br
.B Bin_D2Y =
.RS
space between 2 binary numbers of the same time part.
.RE
.P
.B Bin_D3X =
.br
.B Bin_D3Y =
.RS
space between 2 bits of the same number for the date.
.RE
.P
.B Bin_D4X =
.br
.B Bin_D4Y =
.RS
space between 2 binary numbers of the same date part.
.RE


.SH SEE ALSO
wmclockmon-config(1), wmclockmon-cal(1)


.SH AUTHOR
WMClockMon was assembled by Thomas Nemeth <tnemeth@free.fr>.  It is largely
based on WMMemMon and WMCPULoad by Seiichi SATO <ssato@sh.rim.or.jp> and
WMMemLoad by Mark Staggs <me@markstaggs.net>.
